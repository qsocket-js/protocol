/**
 * Варианты данных.
 * Определяет основной тип сообщения: передача данных или управление.
 */
export const enum EQSocketProtocolMessageType {
	/**
	 * Протокол передачи данных. Сообщение несет полезную нагрузку с данными.
	 * Бинарное значение: 00
	 */
	DATA = 0b00,

	/**
	 * Протокол управления. Сообщение предназначено для управления соединением.
	 * Бинарное значение: 01
	 */
	CONTROL = 0b01,

	/**
	 * Протокол подтверждения доставки
	 * Бинарное значение: 10
	 */
	ACK = 0b10,
}

/**
 * Формат данных полезной нагрузки.
 * Используется для указания типа содержимого в протоколе QSOCKET.
 */
export const enum EQSocketProtocolContentType {
	/**
	 * Отсутствие данных. Используется, когда полезная нагрузка не требуется.
	 * Бинарное значение: 000
	 */
	UNDEFINED = 0b000,

	/**
	 * Отсутствие данных. Используется, когда полезная нагрузка не требуется.
	 * Бинарное значение: 001
	 */
	NULL = 0b001,

	/**
	 * Числовое значение. Полезная нагрузка интерпретируется как число.
	 * Бинарное значение: 010
	 */
	BOOLEAN = 0b010,

	/**
	 * Числовое значение. Полезная нагрузка интерпретируется как число.
	 * Бинарное значение: 011
	 */
	NUMBER = 0b011,

	/**
	 * Символ (один байт). Полезная нагрузка интерпретируется как одиночный символ.
	 * Бинарное значение: 100
	 */
	CHAR = 0b100,

	/**
	 * Строка. Полезная нагрузка интерпретируется как строка в кодировке UTF-8.
	 * Бинарное значение: 101
	 */
	STRING = 0b101,

	/**
	 * Объект. Полезная нагрузка представляет собой сериализованный JSON-объект.
	 * Бинарное значение: 110
	 */
	JSON = 0b110,

	/**
	 * Буфер. Полезная нагрузка передается как двоичные данные (Buffer).
	 * Бинарное значение: 111
	 */
	BUFFER = 0b111,
}

/**
 * Формат декодирования данных полезной нагрузки.
 * Определяет тип сжатия, применяемый к полезной нагрузке.
 */
export const enum EQSocketProtocolContentEncoding {
	/**
	 * Обычный буфер без сжатия.
	 * Бинарное значение: 00
	 */
	RAW = 0b00,

	/**
	 * Сжатие с использованием gzip. Полезная нагрузка закодирована с gzip.
	 * Бинарное значение: 01
	 */
	GZIP = 0b01,

	/**
	 * Сжатие с использованием deflate. Полезная нагрузка закодирована с deflate.
	 * Бинарное значение: 10
	 */
	DEFLATE = 0b10,
}
